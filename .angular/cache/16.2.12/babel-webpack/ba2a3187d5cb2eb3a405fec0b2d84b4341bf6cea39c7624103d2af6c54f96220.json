{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nfunction RBuilderLoginComponent_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \" please enter email \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RBuilderLoginComponent_span_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \" enter valid \");\n    i0.ɵɵelementEnd();\n  }\n}\nclass RBuilderLoginComponent {\n  constructor(fb) {\n    this.fb = fb;\n    this.loginForm = this.fb.group({\n      email: [null, Validators.required],\n      password: [null, [this.pwdValidater('abc')]]\n    });\n  }\n  getLoginData() {\n    this.loginForm.setValue({\n      'email': 'abc@gtt.com',\n      'password': 'abc'\n    });\n    console.log(this.loginForm.value);\n  }\n  // pwdValidater(control: AbstractControl): { [key: string]: boolean } | null {\n  //   console.log(control.value);\n  //   if (control.value === 'chandra') {\n  //     return { 'pwdValid': true };\n  //   }\n  //   return null;\n  // }\n  pwdValidater(pVal) {\n    return control => {\n      if (control.value === pVal) {\n        return {\n          'pwdValid': true\n        };\n      } else {\n        return null;\n      }\n    };\n  }\n  static #_ = this.ɵfac = function RBuilderLoginComponent_Factory(t) {\n    return new (t || RBuilderLoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RBuilderLoginComponent,\n    selectors: [[\"app-r-builder-login\"]],\n    decls: 9,\n    vars: 3,\n    consts: [[3, \"formGroup\", \"ngSubmit\"], [\"type\", \"text\", \"formControlName\", \"email\", \"placeholder\", \"Enter Email\"], [4, \"ngIf\"], [\"type\", \"password\", \"formControlName\", \"password\", \"placeholder\", \"password\"]],\n    template: function RBuilderLoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function RBuilderLoginComponent_Template_form_ngSubmit_0_listener() {\n          return ctx.getLoginData();\n        });\n        i0.ɵɵelement(1, \"input\", 1);\n        i0.ɵɵtemplate(2, RBuilderLoginComponent_span_2_Template, 2, 0, \"span\", 2);\n        i0.ɵɵelement(3, \"br\")(4, \"br\")(5, \"input\", 3);\n        i0.ɵɵtemplate(6, RBuilderLoginComponent_span_6_Template, 2, 0, \"span\", 2);\n        i0.ɵɵelementStart(7, \"button\");\n        i0.ɵɵtext(8, \"Submit\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.loginForm.controls[\"email\"].touched && ctx.loginForm.controls[\"email\"].errors && ctx.loginForm.controls[\"email\"].errors.required);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx.loginForm.controls[\"password\"].errors);\n      }\n    },\n    dependencies: [i2.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}\nexport { RBuilderLoginComponent };","map":{"version":3,"names":["Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","RBuilderLoginComponent","constructor","fb","loginForm","group","email","required","password","pwdValidater","getLoginData","setValue","console","log","value","pVal","control","_","ɵɵdirectiveInject","i1","FormBuilder","_2","selectors","decls","vars","consts","template","RBuilderLoginComponent_Template","rf","ctx","ɵɵlistener","RBuilderLoginComponent_Template_form_ngSubmit_0_listener","ɵɵelement","ɵɵtemplate","RBuilderLoginComponent_span_2_Template","RBuilderLoginComponent_span_6_Template","ɵɵproperty","ɵɵadvance","controls","touched","errors"],"sources":["C:\\Users\\chandra.pothireddy\\Desktop\\practice\\finalOne\\src\\app\\rBuilderLogin\\r-builder-login\\r-builder-login.component.ts","C:\\Users\\chandra.pothireddy\\Desktop\\practice\\finalOne\\src\\app\\rBuilderLogin\\r-builder-login\\r-builder-login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { AbstractControl, FormBuilder, ValidatorFn, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-r-builder-login',\n  templateUrl: './r-builder-login.component.html',\n  styleUrls: ['./r-builder-login.component.css']\n})\nexport class RBuilderLoginComponent {\n  constructor(private fb: FormBuilder){}\n  loginForm = this.fb.group({\n    email:[null, Validators.required],\n    password:[null, [this.pwdValidater('abc')]]\n  });\n  getLoginData() {\n    this.loginForm.setValue({'email':'abc@gtt.com','password':'abc'})\n    console.log(this.loginForm.value);\n  }\n\n  // pwdValidater(control: AbstractControl): { [key: string]: boolean } | null {\n  //   console.log(control.value);\n  //   if (control.value === 'chandra') {\n  //     return { 'pwdValid': true };\n  //   }\n  //   return null;\n  // }\n\n  pwdValidater(pVal:string): ValidatorFn{\n    return (control: AbstractControl):{[key:string]:boolean}| null => {\n      if(control.value === pVal){\n        return {'pwdValid': true}\n      } else{\n        return null;\n      }\n    }\n  }\n\n  \n\n\n}\n","<form [formGroup]=\"loginForm\" (ngSubmit)=\"getLoginData()\">\n    <input type=\"text\" formControlName=\"email\" placeholder=\"Enter Email\"/>\n    <span *ngIf=\"loginForm.controls['email'].touched && loginForm.controls['email'].errors && loginForm.controls['email'].errors.required\">\n        please enter email\n    </span><br /><br />\n    <input type=\"password\" formControlName=\"password\" placeholder=\"password\"/>\n\n    <span *ngIf=\"loginForm.controls['password'].errors\">\n        enter valid\n    </span>\n\n    <button>Submit</button>\n</form>\n"],"mappings":"AACA,SAAoDA,UAAU,QAAQ,gBAAgB;;;;;;ICClFC,EAAA,CAAAC,cAAA,WAAuI;IACnID,EAAA,CAAAE,MAAA,2BACJ;IAAAF,EAAA,CAAAG,YAAA,EAAO;;;;;IAGPH,EAAA,CAAAC,cAAA,WAAoD;IAChDD,EAAA,CAAAE,MAAA,oBACJ;IAAAF,EAAA,CAAAG,YAAA,EAAO;;;ADNX,MAKaC,sBAAsB;EACjCC,YAAoBC,EAAe;IAAf,KAAAA,EAAE,GAAFA,EAAE;IACtB,KAAAC,SAAS,GAAG,IAAI,CAACD,EAAE,CAACE,KAAK,CAAC;MACxBC,KAAK,EAAC,CAAC,IAAI,EAAEV,UAAU,CAACW,QAAQ,CAAC;MACjCC,QAAQ,EAAC,CAAC,IAAI,EAAE,CAAC,IAAI,CAACC,YAAY,CAAC,KAAK,CAAC,CAAC;KAC3C,CAAC;EAJmC;EAKrCC,YAAYA,CAAA;IACV,IAAI,CAACN,SAAS,CAACO,QAAQ,CAAC;MAAC,OAAO,EAAC,aAAa;MAAC,UAAU,EAAC;IAAK,CAAC,CAAC;IACjEC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACT,SAAS,CAACU,KAAK,CAAC;EACnC;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EAEAL,YAAYA,CAACM,IAAW;IACtB,OAAQC,OAAwB,IAAiC;MAC/D,IAAGA,OAAO,CAACF,KAAK,KAAKC,IAAI,EAAC;QACxB,OAAO;UAAC,UAAU,EAAE;QAAI,CAAC;OAC1B,MAAK;QACJ,OAAO,IAAI;;IAEf,CAAC;EACH;EAAC,QAAAE,CAAA,G;qBA3BUhB,sBAAsB,EAAAJ,EAAA,CAAAqB,iBAAA,CAAAC,EAAA,CAAAC,WAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAtBpB,sBAAsB;IAAAqB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,gCAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCRnC/B,EAAA,CAAAC,cAAA,cAA0D;QAA5BD,EAAA,CAAAiC,UAAA,sBAAAC,yDAAA;UAAA,OAAYF,GAAA,CAAAnB,YAAA,EAAc;QAAA,EAAC;QACrDb,EAAA,CAAAmC,SAAA,eAAsE;QACtEnC,EAAA,CAAAoC,UAAA,IAAAC,sCAAA,kBAEO;QAAArC,EAAA,CAAAmC,SAAA,SAAM;QAGbnC,EAAA,CAAAoC,UAAA,IAAAE,sCAAA,kBAEO;QAEPtC,EAAA,CAAAC,cAAA,aAAQ;QAAAD,EAAA,CAAAE,MAAA,aAAM;QAAAF,EAAA,CAAAG,YAAA,EAAS;;;QAXrBH,EAAA,CAAAuC,UAAA,cAAAP,GAAA,CAAAzB,SAAA,CAAuB;QAElBP,EAAA,CAAAwC,SAAA,GAA8H;QAA9HxC,EAAA,CAAAuC,UAAA,SAAAP,GAAA,CAAAzB,SAAA,CAAAkC,QAAA,UAAAC,OAAA,IAAAV,GAAA,CAAAzB,SAAA,CAAAkC,QAAA,UAAAE,MAAA,IAAAX,GAAA,CAAAzB,SAAA,CAAAkC,QAAA,UAAAE,MAAA,CAAAjC,QAAA,CAA8H;QAK9HV,EAAA,CAAAwC,SAAA,GAA2C;QAA3CxC,EAAA,CAAAuC,UAAA,SAAAP,GAAA,CAAAzB,SAAA,CAAAkC,QAAA,aAAAE,MAAA,CAA2C;;;;;;;SDCzCvC,sBAAsB"},"metadata":{},"sourceType":"module","externalDependencies":[]}