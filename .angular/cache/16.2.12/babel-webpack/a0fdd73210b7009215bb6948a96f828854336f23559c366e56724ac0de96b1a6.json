{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nfunction RLoginComponent_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \" Please enter Email \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RLoginComponent_span_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \" Please eneter password \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RLoginComponent_span_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \" minlength should be 8 \");\n    i0.ɵɵelementEnd();\n  }\n}\nclass RLoginComponent {\n  constructor() {\n    this.loginform = new FormGroup({\n      'email': new FormControl(null, Validators.required),\n      'password': new FormControl(null, [Validators.required, Validators.minLength(8)])\n    });\n  }\n  getFormData() {\n    console.log(this.loginform.value);\n    console.log(this.loginform.status);\n  }\n  static #_ = this.ɵfac = function RLoginComponent_Factory(t) {\n    return new (t || RLoginComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RLoginComponent,\n    selectors: [[\"app-r-login\"]],\n    decls: 12,\n    vars: 4,\n    consts: [[3, \"formGroup\", \"ngSubmit\"], [\"type\", \"text\", \"formControlName\", \"email\", \"placeholder\", \"Enter Email\"], [4, \"ngIf\"], [\"type\", \"text\", \"formControlName\", \"password\", \"placeholder\", \"Enter Password\"], [1, \"btn\", \"btn-success\"]],\n    template: function RLoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function RLoginComponent_Template_form_ngSubmit_0_listener() {\n          return ctx.getFormData();\n        });\n        i0.ɵɵelement(1, \"input\", 1);\n        i0.ɵɵtemplate(2, RLoginComponent_span_2_Template, 2, 0, \"span\", 2);\n        i0.ɵɵelement(3, \"br\")(4, \"br\")(5, \"input\", 3);\n        i0.ɵɵtemplate(6, RLoginComponent_span_6_Template, 2, 0, \"span\", 2);\n        i0.ɵɵtemplate(7, RLoginComponent_span_7_Template, 2, 0, \"span\", 2);\n        i0.ɵɵelement(8, \"br\")(9, \"br\");\n        i0.ɵɵelementStart(10, \"button\", 4);\n        i0.ɵɵtext(11, \"Submit\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.loginform);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.loginform.controls[\"email\"].touched && ctx.loginform.controls[\"email\"].errors && ctx.loginform.controls[\"email\"].errors.required);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx.loginform.controls[\"password\"].touched && ctx.loginform.controls[\"password\"].errors && ctx.loginform.controls[\"password\"].errors.required);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.loginform.controls[\"password\"].touched && ctx.loginform.controls[\"password\"].errors && ctx.loginform.controls[\"password\"].errors.minlength);\n      }\n    },\n    dependencies: [i1.NgIf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}\nexport { RLoginComponent };","map":{"version":3,"names":["FormControl","FormGroup","Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","RLoginComponent","constructor","loginform","required","minLength","getFormData","console","log","value","status","_","_2","selectors","decls","vars","consts","template","RLoginComponent_Template","rf","ctx","ɵɵlistener","RLoginComponent_Template_form_ngSubmit_0_listener","ɵɵelement","ɵɵtemplate","RLoginComponent_span_2_Template","RLoginComponent_span_6_Template","RLoginComponent_span_7_Template","ɵɵproperty","ɵɵadvance","controls","touched","errors","minlength"],"sources":["C:\\Users\\chandra.pothireddy\\Desktop\\practice\\finalOne\\src\\app\\rLogin\\r-login\\r-login.component.ts","C:\\Users\\chandra.pothireddy\\Desktop\\practice\\finalOne\\src\\app\\rLogin\\r-login\\r-login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-r-login',\n  templateUrl: './r-login.component.html',\n  styleUrls: ['./r-login.component.css']\n})\nexport class RLoginComponent {\n  loginform = new FormGroup({\n    'email': new FormControl(null, Validators.required),\n    'password': new FormControl(null, [Validators.required, Validators.minLength(8)])\n  });\n  getFormData(){\n    console.log(this.loginform.value);\n    console.log(this.loginform.status);\n  }\n}\n","<form [formGroup]=\"loginform\" (ngSubmit)=\"getFormData()\">\n    <input type=\"text\" formControlName=\"email\" placeholder=\"Enter Email\"/>\n    <span *ngIf=\"loginform.controls['email'].touched && loginform.controls['email'].errors && loginform.controls['email'].errors.required\">\n        Please enter Email\n    </span>\n    <br />\n    <br />\n    <input type=\"text\" formControlName=\"password\" placeholder=\"Enter Password\" />\n    <span *ngIf=\"loginform.controls['password'].touched && loginform.controls['password'].errors && loginform.controls['password'].errors.required\">\n        Please eneter password\n    </span>\n    <span *ngIf=\"loginform.controls['password'].touched && loginform.controls['password'].errors && loginform.controls['password'].errors.minlength\">\n        minlength should be 8\n    </span>\n    <br /><br />\n    <button class=\"btn btn-success\">Submit</button>\n\n</form>"],"mappings":"AACA,SAASA,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;;;;;;ICC/DC,EAAA,CAAAC,cAAA,WAAuI;IACnID,EAAA,CAAAE,MAAA,2BACJ;IAAAF,EAAA,CAAAG,YAAA,EAAO;;;;;IAIPH,EAAA,CAAAC,cAAA,WAAgJ;IAC5ID,EAAA,CAAAE,MAAA,+BACJ;IAAAF,EAAA,CAAAG,YAAA,EAAO;;;;;IACPH,EAAA,CAAAC,cAAA,WAAiJ;IAC7ID,EAAA,CAAAE,MAAA,8BACJ;IAAAF,EAAA,CAAAG,YAAA,EAAO;;;ADVX,MAKaC,eAAe;EAL5BC,YAAA;IAME,KAAAC,SAAS,GAAG,IAAIR,SAAS,CAAC;MACxB,OAAO,EAAE,IAAID,WAAW,CAAC,IAAI,EAAEE,UAAU,CAACQ,QAAQ,CAAC;MACnD,UAAU,EAAE,IAAIV,WAAW,CAAC,IAAI,EAAE,CAACE,UAAU,CAACQ,QAAQ,EAAER,UAAU,CAACS,SAAS,CAAC,CAAC,CAAC,CAAC;KACjF,CAAC;;EACFC,WAAWA,CAAA;IACTC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACL,SAAS,CAACM,KAAK,CAAC;IACjCF,OAAO,CAACC,GAAG,CAAC,IAAI,CAACL,SAAS,CAACO,MAAM,CAAC;EACpC;EAAC,QAAAC,CAAA,G;qBARUV,eAAe;EAAA;EAAA,QAAAW,EAAA,G;UAAfX,eAAe;IAAAY,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,yBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCR5BtB,EAAA,CAAAC,cAAA,cAAyD;QAA3BD,EAAA,CAAAwB,UAAA,sBAAAC,kDAAA;UAAA,OAAYF,GAAA,CAAAd,WAAA,EAAa;QAAA,EAAC;QACpDT,EAAA,CAAA0B,SAAA,eAAsE;QACtE1B,EAAA,CAAA2B,UAAA,IAAAC,+BAAA,kBAEO;QACP5B,EAAA,CAAA0B,SAAA,SAAM;QAGN1B,EAAA,CAAA2B,UAAA,IAAAE,+BAAA,kBAEO;QACP7B,EAAA,CAAA2B,UAAA,IAAAG,+BAAA,kBAEO;QACP9B,EAAA,CAAA0B,SAAA,SAAM;QACN1B,EAAA,CAAAC,cAAA,iBAAgC;QAAAD,EAAA,CAAAE,MAAA,cAAM;QAAAF,EAAA,CAAAG,YAAA,EAAS;;;QAf7CH,EAAA,CAAA+B,UAAA,cAAAR,GAAA,CAAAjB,SAAA,CAAuB;QAElBN,EAAA,CAAAgC,SAAA,GAA8H;QAA9HhC,EAAA,CAAA+B,UAAA,SAAAR,GAAA,CAAAjB,SAAA,CAAA2B,QAAA,UAAAC,OAAA,IAAAX,GAAA,CAAAjB,SAAA,CAAA2B,QAAA,UAAAE,MAAA,IAAAZ,GAAA,CAAAjB,SAAA,CAAA2B,QAAA,UAAAE,MAAA,CAAA5B,QAAA,CAA8H;QAM9HP,EAAA,CAAAgC,SAAA,GAAuI;QAAvIhC,EAAA,CAAA+B,UAAA,SAAAR,GAAA,CAAAjB,SAAA,CAAA2B,QAAA,aAAAC,OAAA,IAAAX,GAAA,CAAAjB,SAAA,CAAA2B,QAAA,aAAAE,MAAA,IAAAZ,GAAA,CAAAjB,SAAA,CAAA2B,QAAA,aAAAE,MAAA,CAAA5B,QAAA,CAAuI;QAGvIP,EAAA,CAAAgC,SAAA,GAAwI;QAAxIhC,EAAA,CAAA+B,UAAA,SAAAR,GAAA,CAAAjB,SAAA,CAAA2B,QAAA,aAAAC,OAAA,IAAAX,GAAA,CAAAjB,SAAA,CAAA2B,QAAA,aAAAE,MAAA,IAAAZ,GAAA,CAAAjB,SAAA,CAAA2B,QAAA,aAAAE,MAAA,CAAAC,SAAA,CAAwI;;;;;;;SDHtIhC,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}