{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nfunction RLoginComponent_div_2_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Name is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RLoginComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 5);\n    i0.ɵɵtemplate(1, RLoginComponent_div_2_div_1_Template, 2, 0, \"div\", 6);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.loginForm.controls[\"email\"].errors && ctx_r0.loginForm.controls[\"email\"].errors[\"required\"]);\n  }\n}\nclass RLoginComponent {\n  constructor() {\n    //  email = new FormControl('');\n    //  password = new FormControl('');\n    this.loginForm = new FormGroup({\n      email: new FormControl(null, Validators.required),\n      password: new FormControl('')\n    });\n  }\n  loginUser() {\n    console.log(this.loginForm.value);\n  }\n  static #_ = this.ɵfac = function RLoginComponent_Factory(t) {\n    return new (t || RLoginComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RLoginComponent,\n    selectors: [[\"app-r-login\"]],\n    decls: 6,\n    vars: 2,\n    consts: [[3, \"formGroup\", \"ngSubmit\"], [\"type\", \"text\", \"formControlName\", \"email\", \"placeholder\", \"please enter email\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [\"type\", \"password\", \"formControlName\", \"password\", \"placeholder\", \"please enter password\"], [1, \"btn\", \"btn-success\"], [1, \"alert\", \"alert-danger\"], [4, \"ngIf\"]],\n    template: function RLoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function RLoginComponent_Template_form_ngSubmit_0_listener() {\n          return ctx.loginUser();\n        });\n        i0.ɵɵelement(1, \"input\", 1);\n        i0.ɵɵtemplate(2, RLoginComponent_div_2_Template, 2, 1, \"div\", 2);\n        i0.ɵɵelement(3, \"input\", 3);\n        i0.ɵɵelementStart(4, \"button\", 4);\n        i0.ɵɵtext(5, \"Login\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.loginForm.controls[\"email\"].touched && ctx.loginForm.controls[\"email\"].invalid);\n      }\n    },\n    dependencies: [i1.NgIf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}\nexport { RLoginComponent };","map":{"version":3,"names":["FormControl","FormGroup","Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵtemplate","RLoginComponent_div_2_div_1_Template","ɵɵadvance","ɵɵproperty","ctx_r0","loginForm","controls","errors","RLoginComponent","constructor","email","required","password","loginUser","console","log","value","_","_2","selectors","decls","vars","consts","template","RLoginComponent_Template","rf","ctx","ɵɵlistener","RLoginComponent_Template_form_ngSubmit_0_listener","ɵɵelement","RLoginComponent_div_2_Template","touched","invalid"],"sources":["C:\\Users\\chandra.pothireddy\\Desktop\\practice\\finalOne\\src\\app\\rLogin\\r-login\\r-login.component.ts","C:\\Users\\chandra.pothireddy\\Desktop\\practice\\finalOne\\src\\app\\rLogin\\r-login\\r-login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-r-login',\n  templateUrl: './r-login.component.html',\n  styleUrls: ['./r-login.component.css']\n})\nexport class RLoginComponent {\n//  email = new FormControl('');\n//  password = new FormControl('');\nloginForm = new FormGroup({\n  email: new FormControl(null, Validators.required),\n  password: new FormControl('')\n})\nloginUser(){\n  console.log(this.loginForm.value)\n}\n// get f(){\n//   return this.loginForm.controls;\n// }\n}\n","<!--<input type=\"text\" [formControl]=\"email\" placeholder=\"please enter email\" />\n{{email.value}}\n<input type=\"password\" [formControl]=\"password\" placeholder=\"please enter password\" />-->\n<form [formGroup]=\"loginForm\" (ngSubmit)=\"loginUser()\">\n    <input type=\"text\" formControlName=\"email\" placeholder=\"please enter email\" />\n    <div *ngIf=\"loginForm.controls['email'].touched && loginForm.controls['email'].invalid\" class=\"alert alert-danger\">\n        <div *ngIf=\"loginForm.controls['email'].errors && loginForm.controls['email'].errors['required']\">Name is required.</div>\n    </div>\n    <input type=\"password\" formControlName=\"password\" placeholder=\"please enter password\" />\n    <button class=\"btn btn-success\">Login</button>\n</form>\n"],"mappings":"AACA,SAASA,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;;;;;;ICK3DC,EAAA,CAAAC,cAAA,UAAkG;IAAAD,EAAA,CAAAE,MAAA,wBAAiB;IAAAF,EAAA,CAAAG,YAAA,EAAM;;;;;IAD7HH,EAAA,CAAAC,cAAA,aAAmH;IAC/GD,EAAA,CAAAI,UAAA,IAAAC,oCAAA,iBAAyH;IAC7HL,EAAA,CAAAG,YAAA,EAAM;;;;IADIH,EAAA,CAAAM,SAAA,GAA0F;IAA1FN,EAAA,CAAAO,UAAA,SAAAC,MAAA,CAAAC,SAAA,CAAAC,QAAA,UAAAC,MAAA,IAAAH,MAAA,CAAAC,SAAA,CAAAC,QAAA,UAAAC,MAAA,aAA0F;;;ADHxG,MAKaC,eAAe;EAL5BC,YAAA;IAMA;IACA;IACA,KAAAJ,SAAS,GAAG,IAAIX,SAAS,CAAC;MACxBgB,KAAK,EAAE,IAAIjB,WAAW,CAAC,IAAI,EAAEE,UAAU,CAACgB,QAAQ,CAAC;MACjDC,QAAQ,EAAE,IAAInB,WAAW,CAAC,EAAE;KAC7B,CAAC;;EACFoB,SAASA,CAAA;IACPC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACV,SAAS,CAACW,KAAK,CAAC;EACnC;EAAC,QAAAC,CAAA,G;qBATYT,eAAe;EAAA;EAAA,QAAAU,EAAA,G;UAAfV,eAAe;IAAAW,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,yBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCL5B7B,EAAA,CAAAC,cAAA,cAAuD;QAAzBD,EAAA,CAAA+B,UAAA,sBAAAC,kDAAA;UAAA,OAAYF,GAAA,CAAAb,SAAA,EAAW;QAAA,EAAC;QAClDjB,EAAA,CAAAiC,SAAA,eAA8E;QAC9EjC,EAAA,CAAAI,UAAA,IAAA8B,8BAAA,iBAEM;QACNlC,EAAA,CAAAiC,SAAA,eAAwF;QACxFjC,EAAA,CAAAC,cAAA,gBAAgC;QAAAD,EAAA,CAAAE,MAAA,YAAK;QAAAF,EAAA,CAAAG,YAAA,EAAS;;;QAN5CH,EAAA,CAAAO,UAAA,cAAAuB,GAAA,CAAArB,SAAA,CAAuB;QAEnBT,EAAA,CAAAM,SAAA,GAAgF;QAAhFN,EAAA,CAAAO,UAAA,SAAAuB,GAAA,CAAArB,SAAA,CAAAC,QAAA,UAAAyB,OAAA,IAAAL,GAAA,CAAArB,SAAA,CAAAC,QAAA,UAAA0B,OAAA,CAAgF;;;;;;;SDG7ExB,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}