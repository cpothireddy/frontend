{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nfunction RLoginComponent_div_2_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Name is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RLoginComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 5);\n    i0.ɵɵtemplate(1, RLoginComponent_div_2_div_1_Template, 2, 0, \"div\", 6);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.loginForm.controls[\"email\"].errors && ctx_r0.loginForm.controls[\"email\"].errors[\"required\"]);\n  }\n}\nclass RLoginComponent {\n  constructor() {\n    this.loginform = new FormGroup({\n      'email': new FormControl(null, Validators.required),\n      'password': new FormControl(null)\n    });\n  }\n  static #_ = this.ɵfac = function RLoginComponent_Factory(t) {\n    return new (t || RLoginComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RLoginComponent,\n    selectors: [[\"app-r-login\"]],\n    decls: 6,\n    vars: 3,\n    consts: [[3, \"formGroup\", \"ngSubmit\"], [\"type\", \"text\", \"formControlName\", \"email\", \"placeholder\", \"please enter email\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [\"type\", \"password\", \"formControlName\", \"password\", \"placeholder\", \"please enter password\"], [1, \"btn\", \"btn-success\", 3, \"disabled\"], [1, \"alert\", \"alert-danger\"], [4, \"ngIf\"]],\n    template: function RLoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function RLoginComponent_Template_form_ngSubmit_0_listener() {\n          return ctx.loginUser();\n        });\n        i0.ɵɵelement(1, \"input\", 1);\n        i0.ɵɵtemplate(2, RLoginComponent_div_2_Template, 2, 1, \"div\", 2);\n        i0.ɵɵelement(3, \"input\", 3);\n        i0.ɵɵelementStart(4, \"button\", 4);\n        i0.ɵɵtext(5, \"Login\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.loginForm.controls[\"email\"].touched && ctx.loginForm.controls[\"email\"].invalid);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", ctx.loginForm.invalid);\n      }\n    },\n    dependencies: [i1.NgIf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}\nexport { RLoginComponent };","map":{"version":3,"names":["FormControl","FormGroup","Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵtemplate","RLoginComponent_div_2_div_1_Template","ɵɵadvance","ɵɵproperty","ctx_r0","loginForm","controls","errors","RLoginComponent","constructor","loginform","required","_","_2","selectors","decls","vars","consts","template","RLoginComponent_Template","rf","ctx","ɵɵlistener","RLoginComponent_Template_form_ngSubmit_0_listener","loginUser","ɵɵelement","RLoginComponent_div_2_Template","touched","invalid"],"sources":["C:\\Users\\chandra.pothireddy\\Desktop\\practice\\finalOne\\src\\app\\rLogin\\r-login\\r-login.component.ts","C:\\Users\\chandra.pothireddy\\Desktop\\practice\\finalOne\\src\\app\\rLogin\\r-login\\r-login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-r-login',\n  templateUrl: './r-login.component.html',\n  styleUrls: ['./r-login.component.css']\n})\nexport class RLoginComponent {\n  loginform = new FormGroup({\n    'email': new FormControl(null, Validators.required),\n    'password': new FormControl(null)\n  });\n}\n","<!--<input type=\"text\" [formControl]=\"email\" placeholder=\"please enter email\" />\n{{email.value}}\n<input type=\"password\" [formControl]=\"password\" placeholder=\"please enter password\" />-->\n<form [formGroup]=\"loginForm\" (ngSubmit)=\"loginUser()\">\n    <input type=\"text\" formControlName=\"email\" placeholder=\"please enter email\" />\n    <div *ngIf=\"loginForm.controls['email'].touched && loginForm.controls['email'].invalid\" class=\"alert alert-danger\">\n        <div *ngIf=\"loginForm.controls['email'].errors && loginForm.controls['email'].errors['required']\">Name is\n            required.</div>\n    </div>\n    <input type=\"password\" formControlName=\"password\" placeholder=\"please enter password\" />\n    <button class=\"btn btn-success\" [disabled]=\"loginForm.invalid\">Login</button>\n</form>\n"],"mappings":"AACA,SAASA,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;;;;;;ICK3DC,EAAA,CAAAC,cAAA,UAAkG;IAAAD,EAAA,CAAAE,MAAA,wBACrF;IAAAF,EAAA,CAAAG,YAAA,EAAM;;;;;IAFvBH,EAAA,CAAAC,cAAA,aAAmH;IAC/GD,EAAA,CAAAI,UAAA,IAAAC,oCAAA,iBACmB;IACvBL,EAAA,CAAAG,YAAA,EAAM;;;;IAFIH,EAAA,CAAAM,SAAA,GAA0F;IAA1FN,EAAA,CAAAO,UAAA,SAAAC,MAAA,CAAAC,SAAA,CAAAC,QAAA,UAAAC,MAAA,IAAAH,MAAA,CAAAC,SAAA,CAAAC,QAAA,UAAAC,MAAA,aAA0F;;;ADHxG,MAKaC,eAAe;EAL5BC,YAAA;IAME,KAAAC,SAAS,GAAG,IAAIhB,SAAS,CAAC;MACxB,OAAO,EAAE,IAAID,WAAW,CAAC,IAAI,EAAEE,UAAU,CAACgB,QAAQ,CAAC;MACnD,UAAU,EAAE,IAAIlB,WAAW,CAAC,IAAI;KACjC,CAAC;;EACH,QAAAmB,CAAA,G;qBALYJ,eAAe;EAAA;EAAA,QAAAK,EAAA,G;UAAfL,eAAe;IAAAM,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,yBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCL5BxB,EAAA,CAAAC,cAAA,cAAuD;QAAzBD,EAAA,CAAA0B,UAAA,sBAAAC,kDAAA;UAAA,OAAYF,GAAA,CAAAG,SAAA,EAAW;QAAA,EAAC;QAClD5B,EAAA,CAAA6B,SAAA,eAA8E;QAC9E7B,EAAA,CAAAI,UAAA,IAAA0B,8BAAA,iBAGM;QACN9B,EAAA,CAAA6B,SAAA,eAAwF;QACxF7B,EAAA,CAAAC,cAAA,gBAA+D;QAAAD,EAAA,CAAAE,MAAA,YAAK;QAAAF,EAAA,CAAAG,YAAA,EAAS;;;QAP3EH,EAAA,CAAAO,UAAA,cAAAkB,GAAA,CAAAhB,SAAA,CAAuB;QAEnBT,EAAA,CAAAM,SAAA,GAAgF;QAAhFN,EAAA,CAAAO,UAAA,SAAAkB,GAAA,CAAAhB,SAAA,CAAAC,QAAA,UAAAqB,OAAA,IAAAN,GAAA,CAAAhB,SAAA,CAAAC,QAAA,UAAAsB,OAAA,CAAgF;QAKtDhC,EAAA,CAAAM,SAAA,GAA8B;QAA9BN,EAAA,CAAAO,UAAA,aAAAkB,GAAA,CAAAhB,SAAA,CAAAuB,OAAA,CAA8B;;;;;;;SDFrDpB,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}